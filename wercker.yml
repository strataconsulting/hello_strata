# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/strataconsulting/hello_strata
    - golint

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    - script:
        name: install mitchellh/gox
        code: |
          go get -u -v github.com/mitchellh/gox

    - tcnksm/gox:
        os: "linux darwin"
        arch: amd64

release:
  box: tcnksm/gox:1.4.2
  steps:
    - tcnksm/gox

push-debug:
  box: alpine
  steps:
    - internal/docker-push:
      repository: quay.io/strataconsulting/hello_strata
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      registry: quay.io
      tag: debug-$WERCKER_GIT_COMMIT
      ports: "9000"
      working-dir: /pipeline/source

